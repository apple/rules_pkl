//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//
amends "package://pkg.pkl-lang.org/pkl-project-commons/pkl.impl.circleci@1.1.1#/PklCI.pkl"

prb {
  jobs {
    "test"
  }
}

main {
  jobs {
    "test"
  }
}

local bazelCacheKeys: Listing<String> = new {
  #"v1-bazel-cache-{{ arch }}-{{ checksum "MODULE.bazel" }}"#
  #"v1-bazel-cache-{{ arch }}-"#
  #"v1-bazel-cache-"#
}
local bazelCacheKeySpecific = bazelCacheKeys.first
local bazelTestLogs = "/tmp/bazel-testlogs"

jobs {
  ["test"] {
    docker {
      new { image = "gcr.io/bazel-public/bazel:7.6.1" }
    }
    steps {
      "checkout"
      new RestoreCacheStep {
        keys = bazelCacheKeys
      }
      new RunStep {
        name = "Buildifier lint"
        command = "bazel run --config=circleci buildifier"
      }
      new RunStep {
        name = "Check licenses"
        command = "bazel run --config=circleci //scripts:hawkeye -- check --fail-if-unknown"
      }
      new RunStep {
        name = "Gazelle"
        command = "bazel run --config=circleci //:gazelle && git diff --exit-code"
      }
      new RunStep {
        name = "Bazel version consistency"
        command = "WORKING_DIRECTORY=\"${PWD}\" bazel run --config=circleci //tests/version:version_test -- --verbose"
      }
      new RunStep {
        name = "Bazel tests"
        command = "bazel test --config=circleci //..."
      }
      new SaveCacheStep {
        key = bazelCacheKeySpecific
        paths {
          "/tmp/bazel_cache/disk"
          "/tmp/bazel_cache/repositories"
        }
      }
      new RunStep {
        name = "Copy test.xml files"
        command = "mkdir -p \(bazelTestLogs) && find -L bazel-testlogs -name \\*.xml -exec cp --parents {} \(bazelTestLogs) \\;"
        `when` = "always"
      }
      new StoreTestResults {
        path = bazelTestLogs
      }
    }
  }
}

circleCi {
  workflows {
  }
}
